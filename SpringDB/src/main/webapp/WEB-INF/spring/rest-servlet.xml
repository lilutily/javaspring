<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jee https://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
		
		
		<!--  컨트롤러 어노테이션으로 생성 및 관리하고자 할때 이 태그를 등록해야함 -->
		<annotation-driven/>
		<!-- base-package에 소속된 모든 클래스는 인스턴스의 scan 대상이 된다-->
		<context:component-scan base-package="com.academy.springdb.restcontroller" />
			<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> -->
		
		<!-- 비동기 요청에 대해, json 데이터를 보내고자 할때 java객체를 자동으로 json 객체로 변환해주는 빈을 등록해본다 -->
		<beans:bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
			<beans:property name="supportedMediaTypes">
				<beans:value>application/json;charset=utf-8</beans:value>
			</beans:property>
		</beans:bean>
		
</beans:beans>