<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/p http://www.springframework.org/schema/p/spring-p-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
		
		<!-- 정적자원에 요청을 하위 컨트롤러 없이 , 스프링 자체적으로 해결 -->
		<mvc:resources location="/resources/" mapping="/static/**"/>
		
		<!-- 뷰 리저버 등록 -->
		<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="prefix" value="/WEB-INF/views/"/>
			<property name="suffix" value=".jsp"/>
		</bean>
		
		<mvc:annotation-driven/>
		
		<!-- 컴포넌트 스캔 -->
		<context:component-scan base-package="com.academy.shopping.controller"/>
		
		<!-- 파일업로드 빈 등록 -->
		<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<property name="maxUploadSize" value="1048576"></property>
		</bean>
		
		<!-- 공통로직 등록 -->
		<!-- <bean id="topCategoryAspect" class="com.academy.shopping.aop.TopCategoryAspect"/> -->
		<bean id="adminLoginAspect" class="com.academy.shopping.aop.AdminLoginAspect"/>
		<bean id="memberLoginAspect" class="com.academy.shopping.aop.MemberLoginAspect"/>
		<bean id="globalExceptionAspect" class="com.academy.shopping.aop.GlobalExceptionAspect"/>
		
		<!-- 쇼핑몰내의 모든 컨트롤러의 메서드 호출시 우리가 정의한 Aspet클래스를 동작시키자 -->
		 
		 <!-- <aop:config>
		  	<aop:aspect ref="topCategoryAspect">
				어디 지점에서? *은 반환객체인데 modelandview 나 String이나 너무 다양해서 전부 설정함
				<aop:pointcut expression="execution(public * com.academy.shopping.controller.shop..*(..))" id="topCategoryPointcut"/>
				 어느 시점에서?  호출 전,후에 실행		  	
				<aop:around method="getCategoryList" pointcut-ref="topCategoryPointcut"/>
		  	</aop:aspect>
		  </aop:config> -->
		
		  <aop:config>
		  	<aop:aspect ref="adminLoginAspect">
		  		<aop:pointcut expression="execution(public * com.academy.shopping.controller.admin..*(..))" id="adminLoginPointcut"/>
		  		<aop:around method="loginCheck" pointcut-ref="adminLoginPointcut"/>
		  	</aop:aspect>
		  </aop:config>
		  
		  <aop:config>
		  	<aop:aspect ref="memberLoginAspect">
		  		<aop:pointcut expression="execution(public * com.academy.shopping.controller.shop..*(..))" id="memberLoginPointcut"/>
		  		<aop:around method="loginCheck" pointcut-ref="memberLoginPointcut"/>
		  	</aop:aspect>
		  </aop:config>
		  
		
		
</beans>