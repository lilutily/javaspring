<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
		
		<!-- 어느 DB를 사용할지 결정한다 -->
		<jee:jndi-lookup jndi-name="jdbc/myoracle" id="dataSource" resource-ref="true"/>
		
		<!-- 
				DB연동 기술에 따른 트랜잭션 매니저 등록 -
				hibernate : HibernateTransactionManager (사설 라이브러리)
				JPA : JpaTransactionManager (네이티브 라이브러리)
				jdbc : DataSourceTransactionManager
				mybatis : DataSourceTranscationManager
		-->
		<!--  트랜잭션 처리를 자동화 해주는 설정 , 모든 대상이 되는 서비스에 @만 붙이면된다...-->
		<tx:annotation-driven/>
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"/>
		 </bean>
		 
		 <!-- mybatis의 쿼리문 수행 객체인 SqlSession을 얻기 위한 객체인 SqlSessionFactoryBean 등록 -->
		 <bean id="factoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		 	<property name="dataSource" ref="dataSource"/>
		 	<property name="configLocation" value="classpath:com/academy/shopping/mybatis/config.xml"/>
		 </bean>
		 
		 <!-- DAO가 주입을 기다리고 있는 SqlSessionTemplate 을 등록하자 -->
		 <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		 	<constructor-arg ref="factoryBean"/>
		 </bean>
		 
		   <!-- 메일 빈 -->
		  <bean id="mailSender" class="com.academy.shopping.model.util.MailSender"/>
		  <bean id="mailFormReader" class="com.academy.shopping.model.util.MailFormReader"/>
		  
		 <context:component-scan base-package="com.academy.shopping.model"/>
</beans>